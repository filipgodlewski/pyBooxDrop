name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12, 3.13]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          python-version: ${{ matrix.python-version }}

      - name: Install lint dependencies
        run: uv sync --no-dev --extra lint

      - name: Run pyupgrade
        run: find src tests -name '*.py' | xargs uvx pyupgrade --py312-plus

      - name: Run ruff
        run: uvx ruff check --no-fix

      - name: Run bandit
        run: uvx bandit -r src

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12, 3.13]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          python-version: ${{ matrix.python-version }}

      - name: Install test dependencies
        run: uv sync

      - name: Run pytest
        run: uvx pytest

  test-release:
    name: TestPyPI Release
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          cache: true
          cache-dependency-glob: "uv.lock"
          python-version: 3.12

      - name: Install build dependencies
        run: uv sync --no-dev --extra release

      - name: Build package
        run: uv run python -m build

      - name: Publish to Test PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: uvx twine upload --repository testpypi dist/*
